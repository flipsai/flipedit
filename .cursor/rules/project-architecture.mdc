---
description: 
globs: 
alwaysApply: true
---
# FlipEdit Architecture and Package Overview

## Core Architecture
- **Framework**: Flutter/Dart
- **Architecture Pattern**: MVVM (Model-View-ViewModel)
- **State Management**: `watch_it` for reactive state management with built-in dependency injection
- **Data Persistence**: `drift` (SQLite wrapper for Flutter)

## Key Packages
1. **State Management**:
   - `watch_it`: Provides reactive state management with a built-in service locator

2. **Data Persistence**:
   - `drift`: SQLite ORM for Flutter with reactive streams

3. **UI Framework**:
   - Borrowing concepts from `tide_kit` for window/panel management
   - Custom panels and workspace layout inspired by VS Code

4. **Media Handling**:
   - Integration with ComfyUI for AI features
   - Native video processing capabilities

## Project Structure
- `/lib`: Main application code
  - `/models`: Domain models for projects, clips, effects
  - `/viewmodels`: MVVM pattern ViewModels
  - `/views`: UI components
  - `/services`: Core application services
  - `/persistence`: Database and file handling
  - `/comfyui`: Integration with ComfyUI
  - `/extensions`: Extension system for plugins
  - `/utils`: Utility classes and helpers
  - `/di`: Dependency injection setup

## Key Architectural Concepts
- Extension-based architecture for plugins
- ComfyUI embedding for AI features
- Effect tree model for non-destructive editing
- Timeline-based editing interface
- Panel-based UI inspired by VS Code

## Development Patterns
- Reactive UI updates via `watch_it`
- Service-based architecture with dependency injection
- Non-destructive editing pipeline
- Extension points for third-party functionality